//  NOTE font
@mixin exo($weight: 400) {
  font-family: 'Exo 2', sans-serif;
  font-weight: $weight;
  letter-spacing: 0.02em;
  word-spacing: 0.04em;
}

@mixin flex($jc: flex-start, $ai: stretch, $gap: 0, $dir: row) {
  display: flex;
  justify-content: $jc;
  align-items: $ai;
  gap: $gap;
  flex-direction: $dir;
}

@mixin btn-with-arrow($color: $black) {
  @include flex(flex-start, center);
  @include exo(600);
  display: inline-flex;
  cursor: pointer;
  font-size: 1.6rem;
  color: $color;
  white-space: nowrap;

  &::after {
    content: url('../assets/image/common/btn-arrow.svg');
    width: 2rem;
    display: inline-block;
    margin-left: 2rem;
    transition: transform 0.3s;
  }

  &:hover::after {
    transform: translateX(0.6rem);
  }
}

@mixin btn-rounded($color: $white, $hover: $black) {
  // @include flex(center, center);
  @include exo(400);
  @include btn-with-arrow($color);
  padding: 0 3rem;
  height: 4rem;
  border: 0.1rem solid $color;
  background: transparent;
  transition:
    background 0.3s,
    color 0.3s;
  border-radius: 10rem;

  &:hover {
    background: $color;
    color: $hover;
  }

  &::after {
    display: none;
  }
}

@mixin sec-title() {
  font-size: 4rem;
  font-weight: 500;
}

@mixin sec-desc() {
  font-weight: 400;
  color: rgba(0, 0, 0, 0.6);
  line-height: 1.8em;
}

@mixin arrow-btn($active: false) {
  width: 6rem;
  height: 6rem;

  circle {
    stroke-dashoffset: 300;
    stroke-dasharray: 300;
    transition: stroke-dashoffset 0.3s;
  }

  @if ($active == true) {
    circle {
      stroke-dashoffset: 0;
      stroke-dasharray: 300;
    }
  }
}

@mixin nav-btn {
  width: 6rem;
  height: 6rem;
  transition: opacity 0.3s;

  &.swiper-button-disabled {
    opacity: 0.4;
  }

  &::after {
    @include arrow-btn();
    content: url('../assets/image/main/arrow-down.svg');
    display: inline-block;
    width: 100%;
    height: 100%;
  }

  &:hover ::after {
    @include arrow-btn(true);
  }
}

@mixin swiper-nav-btn($direction: prev) {
  background: transparent;
  cursor: pointer;
  transition: opacity 0.3s;
  @include arrow-btn();

  &:hover {
    @include arrow-btn(true);
  }

  &:disabled {
    opacity: 0.4;
    cursor: default;
    &:hover {
      @include arrow-btn(false);
    }
  }

  @if ($direction == prev) {
    @extend .Fleet__nav-btn;
    transform: rotateZ(90deg) rotateY(180deg);
  } @else {
    @extend .Fleet__nav-btn;
    transform: rotateZ(-90deg);
  }
}

@mixin InputContainer {
  position: relative;
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 0;
    height: 0.1rem;
    background: $black;
    will-change: width;
    transition: width 0.3s;
  }
  &[data-focus='true'] {
    &::after {
      width: 100%;
    }
  }
}
@mixin Input {
  height: 4rem;
  padding: 0.8rem 0;
  border: none;
  border-bottom: 0.1rem solid rgba(0, 0, 0, 0.2);

  &::placeholder {
    color: rgba(0, 0, 0, 0.4);
  }

  &:focus {
    outline: none;
  }
}
